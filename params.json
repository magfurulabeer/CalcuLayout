{
  "name": "Calculayout",
  "tagline": "CalcuLayout is a domain specific language to make iOS AutoLayout easy, intuitive, and look like simple math.",
  "body": "# Basics\r\nThis is how constraints are added natively in Swift through Anchors:\r\n\r\n```swift\r\n\r\nbutton.widthAnchor.constraintEqualToAnchor(button.heightAnchor, multiplier: 2.0, constant: 40.0).active = true\r\n\r\n```\r\n\r\nThis is how constraints are added using CalcuLayout\r\n\r\n```swift\r\n\r\nbutton.width <> button.height * 2^ + 40^++\r\n\r\n```\r\n\r\n<br>\r\n\r\n# Documentation\r\n\r\n### Making a new constraint\r\n\r\n##### Making a new constraint with an Equal Relation\r\n\r\nTo make a constraint connecting two anchors or an anchor and a constant, you use the **<>** operator.\r\n```swift\r\n\r\n// Normal Way \r\nbutton.widthAnchor.constraintEqualToAnchor(button.heightAnchor)\r\n\r\n// CalcuLayout Way\r\nbutton.width <> button.height\r\n\r\n```\r\n\r\nAlternatively, you can use the **==** operator.\r\n\r\n```swift\r\n\r\n// CalcuLayout way\r\nbutton.width == button.height\r\n\r\n```\r\n###### *Warning: This operator can cause confusion as == is normally used for comparison*\r\n\r\n##### Making a new constraint with an Greater Than Equal To/ Less Than Equal To Relation\r\n\r\nTo make a constraint connecting two anchors, you use the **<>** operator.\r\n```swift\r\n\r\n// Normal Way \r\nbutton.widthAnchor.constraintGreaterThanOrEqualToAnchor(button.heightAnchor)\r\nbutton.widthAnchor.constraintLessThanOrEqualToAnchor(button.heightAnchor)\r\n\r\n// CalcuLayout Way\r\nbutton.width >> button.height\r\nbutton.width << button.width\r\n\r\n```\r\n\r\nAlternatively, you can use the **>=** and **<=** operator.\r\n\r\n```swift\r\n\r\n// CalcuLayout Way\r\nbutton.width >= button.height\r\nbutton.width <= button.width\r\n\r\n```\r\n###### *Warning: This operator can cause confusion as >= and <= are normally used for comparison*\r\n\r\n##### Making a new constraint equal to a constant\r\n\r\nTo make a constraint connecting two anchors or an anchor and a constant, you use the **<>** operator.\r\n```swift\r\n\r\n// Normal Way \r\nbutton.widthAnchor.equalToConstant(100)\r\n\r\n// CalcuLayout Way\r\nbutton.width <> 100^\r\n\r\n```\r\n\r\n<br>\r\n\r\n### Adding a constant to the constraint\r\n\r\n#### Converting a number into a Layout Modifier\r\n \r\n To convert a number into a Layout Modifier, you simply use the postfix operator ^\r\n \r\n```swift\r\n\r\n100^\r\n\r\n```\r\n\r\nAlternatively, you can use the method C or M. Functionally they do the same thing but can make it easier to read.\r\n\r\n```swift\r\n\r\n100.C\r\n100.M\r\n\r\n```\r\n\r\n#### Applying the Layout Modifier\r\n\r\nNow to actually apply a Layout Constraint as a constant:\r\n\r\n```swift\r\n\r\n// Normal Way\r\nbutton.widthAnchor.constraintEqualToAnchor(button.heightAnchor, constant: 40.0)\r\n\r\n// CalcuLayout Way\r\nbutton.width <> button.height + 40^\r\n// or \r\n// button.width <> button.height + 40.C\r\n\r\n```\r\n\r\n<br>\r\n\r\n### Adding a multiplier to the constraint\r\n\r\nAdding a multiplier is very similar to a constant\r\n\r\n```swift\r\n\r\n// Normal Way\r\nbutton.widthAnchor.constraintEqualToAnchor(button.heightAnchor, multiplier: 2.0)\r\n\r\n// CalcuLayout Way\r\n\r\nbutton.width <> button.height * 2^\r\n// or \r\n// button.width <> button.height + 40.M\r\n\r\n```\r\n\r\n<br>\r\n\r\n### Activating a Constraint\r\n\r\nNormally, you activate a constraint by setting it's *active* property to *true*\r\nWith CalcuLayout, you activate a constraint by using the ++ at the end of the constraint's expression\r\n\r\n```swift\r\n\r\n// Normal One Liner Way\r\nbutton.widthAnchor.constraintEqualToAnchor(button.heightAnchor, constant: 50.0, multiplier: 2.0).active = true\r\n\r\n// CalcuLayout One Liner Way\r\n\r\nbutton.width <> button.height + 50^ * 2^++\r\n\r\n\r\n// Normal Two Liner Way\r\nlet constraint = button.widthAnchor.constraintEqualToAnchor(button.heightAnchor, constant: 50.0, multiplier: 2.0)\r\nconstraint.active = true\r\n\r\n// CalcuLayout Two Liner Way\r\n\r\nlet constraint = button.width <> button.height + 50^ * 2^\r\nconstraint++\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}